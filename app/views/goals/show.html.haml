- @title = "#{ is_owner?(@goal) ? 'I will' : @goal.user.full_name + ':'  } #{ h @goal.title } #{ @goal.to_s }".titlecase
- is_current_user_owner_of_goal = is_owner?(@goal)

- unless is_current_user_owner_of_goal
  .owner
    = render 'layouts/follow', user: @user
    .user
      .avatar= link_to image_tag(asset_path(@user.avatar.url), size: '80x80'), user_path(@user)
      .info
        = link_to @user.full_name, user_path(@user)
        %p.help-block= @user.username
        %p.bio= @user.bio.blank? ? 'nothing yet' : @user.bio

/ main container
.content(class="#{ 'panel-content' unless is_current_user_owner_of_goal }")
  #pad-wrapper.goal-wrapper
    - if @goal.inactive? && is_current_user_owner_of_goal
      .row.col-md-11
        .alert.alert-warning(role='alert')
          %i.fa.fa-warning.fa-lg
          The goal is pending deposit. Please 
          = link_to 'make the deposit', new_goal_deposit_path(@goal), class: 'alert-link'
          so we can start tracking your progress.

    .row.goal
      .col-md-9
        .legend#goal-legend
          .wrapper
            = get_goal_legend(@goal)
            - if is_current_user_owner_of_goal
              .edit Change

        - if is_current_user_owner_of_goal
          .legends(tabindex='-1')
            - LEGEND_MAP.each do |l|
              - img = image_tag asset_path("/assets/legends/#{ l[0] }.png")
              - content = "<div class='legend'><div class='wrapper'>#{ img }</div></div>"
          
              = link_to content.html_safe, user_goal_path(current_user, @goal, goal: { legend: l[0]} ), remote: true, method: :put, data: { url: asset_path("/assets/legends/#{ l[0] }.png") }
        
        
        .right
          %h3
            .editable(data-type='text' data-name='goal[title]' data-pk='1' data-url='/#{ current_user.slug }/goals/#{ @goal.slug }')
              = h @goal.title
            - if is_current_user_owner_of_goal
              .edit.edit-title
                &nbsp;
                %a.btn.btn-default.btn-sm(href='#') Edit
            
          %p.area
            = @goal.to_s
                
          - if @goal.description.blank? 
            - if is_current_user_owner_of_goal
              .desc
                .new.editable(data-type='textarea' data-value='' data-name='goal[description]' data-url='/#{ current_user.slug }/goals/#{ @goal.slug }')
                  = h textarea_format @goal.description
          - else
            .desc
              .exist.editable(data-type='textarea' data-value='#{ h @goal.description }'data-name='goal[description]' data-url='/#{ current_user.slug }/goals/#{ @goal.slug }')
                = h textarea_format @goal.description
                - if is_current_user_owner_of_goal
                  %span.edit.edit-desc
                    %a.btn.btn-default.btn-sm(href='#') Edit
          
          .attrs
            .hash-tag(class='#{ "active" if is_current_user_owner_of_goal }' title="Tweet \"@upmit ##{ @goal.hash_tag }\" to check in today's commitment.")
              %span.icon #
              %span.editable(class='#{ "active" if is_current_user_owner_of_goal }' data-type='text' data-name='goal[hash_tag]' data-pk='1' data-url='/#{ current_user.slug }/goals/#{ @goal.slug }')= @goal.hash_tag
              
            .visibility(class='#{ "active" if is_current_user_owner_of_goal }' title="The goal's privacy setting - who can see the details of the goal.")
              %i.icon.fa.fa-eye
              %span.editable(data-source="#{ Goal::PrivacySelect.to_json }" data-value='#{ @goal.privacy }' data-type='select' data-name='goal[privacy]' data-pk='1' data-url='/#{ current_user.slug }/goals/#{ @goal.slug }')= Goal::Privacy[@goal.privacy]
            
            
            - if is_current_user_owner_of_goal && @goal.description.blank? 
              .desc.active
                %a(href='#')
                  %i.icon.fa.fa-plus
                  %span description


      .col-md-2.side
        .status= label_maker @goal.state_in_words, Goal::Labels[@goal.state]
        

    
    .row.line-break.col-md-11
    
    .row
      .col-md-11.detail
        .col-md-9.col-sm-12.col-xs-12
          .row
            .col-md-2.col-sm-2.col-xs-2.field Starts:
            .col-md-3.col-sm-3.col-xs-4.data
              - if @goal.inactive?
                - #TODO: goals starts on today/tomorrow, and decide the date when the deposit is made
              - else
                = @goal.deposit.created_at.in_time_zone(@goal.user.timezone).strftime("%b %d, %Y")
        
            - unless @goal.inactive?
              .col-md-2.col-sm-2.col-xs-2.col-md-offset-1.col-sm-offset-1.field.short Ends:
              .col-md-3.col-sm-3.col-xs-4.data= (@goal.deposit.created_at + (@goal.duration - 1).days).in_time_zone(@goal.user.timezone).strftime("%b %d, %Y")
      
          .row
            .col-md-2.col-sm-2.col-xs-2.field 
              Committed:
            .col-md-3.col-sm-3.col-xs-4.data
              = @goal.occurrence
              days
          
          - past = @goal.commits.past.size
          - unless @goal.inactive?          
            .row
              .col-md-2.col-sm-2.col-xs-2.field Success:
            
              - succeed = @goal.commits.succeed.size
              .col-md-3.col-sm-3.col-xs-4.data= succeed

              .col-md-2.col-sm-2.col-xs-2.col-md-offset-1.col-sm-offset-1.field.short Fail:
          
              - failed = @goal.commits.failed.size
              .col-md-3.col-sm-3.col-xs-4.data= failed
          
          
            - unless @goal.completed?
              .row
                .col-md-2.col-sm-2.col-xs-2.field
                  Total:
            
                .col-md-3.col-sm-3.col-xs-4.data
                  = @goal.occurrence - past
                  days to go

        
        .col-md-3.col-sm-12.col-xs-12.donut-wrapper
          - percentage = past * 100 / @goal.occurrence

          .donut(data-dimension="140"
                  data-text="#{ percentage }%"
                  data-width="24"
                  data-fontsize="24"
                  data-percent="#{ percentage }"
                  data-fgcolor="#50BB50"
                  data-bgcolor="#eee"
                  data-fill="#ddd")
    
    .row.line-break.col-md-11
    
    .row
      .col-md-11.activities
        %h5 Activities
        
        .col-md-9
          .comment.clearfix
            = form_for Comment.build_from(@goal), url: comments_path, html: { role: 'form', class: 'form-inline' }, remote: true do |f|
              .form-group
                = f.hidden_field :commentable_type
                = f.hidden_field :commentable_id
                
                .col.avatar= image_tag(asset_path(current_user.avatar.thumb.url), size: '40x40')
                .col.input= f.text_field :body, class: 'form-control input-sm', placeholder: 'your comment here'
                .col= f.submit 'Post', class: 'btn-glow primary btn-sm'
      
        .col-md-9.activity-holder= render 'activities'

    - if is_current_user_owner_of_goal
      = render 'commits/commit_modal', id: 'edit-commit', title: 'Edit note and photo', cancel: 'Cancel'
  
