- @title = 'Home - Upmit.com'

- @active = current_user.goals.active.order('created_at desc')

/ main container
.content
  - if  current_user.goals.active.size == 0
    #pad-wrapper
      = render 'home/jumbotron'
  
  - else
    #pad-wrapper.main-wrapper
      / upper main stats
      #main-stats
        .row.stats-row
          .col-md-3.col-sm-3.stat
            .data
              - active_goals = current_user.goals.active.size

              %span.number= active_goals
              = 'goal'.pluralize(active_goals)

            .date
              active now

          .col-md-3.col-sm-3.stat
            .data
              - active_commits = current_user.commits.active.size

              %span.number= active_commits
              = 'day'.pluralize(active_commits)

            .date
              committed to action

          .col-md-3.col-sm-3.stat
            .data
              - completed_goals = current_user.goals.completed.size

              %span.number= completed_goals
              = 'goal'.pluralize(completed_goals)

            .date
              completed

          .col-md-3.col-sm-3.stat
            .data
              %span#earn-back.number $#{ current_user.commits.succeed.size }
              Earned back
            .date
              all time
              
      .row
        .col-md-12
          %a.new-goal.btn-glow.primary(href='#{ new_goal_path }')
            %i.fa.fa-plus
            New Goal
          %h3 Your progress

      - @active.each do |goal|
        .row(id='goal-#{ goal.id }')
          .active-goal.col-md-12
            .info.col-md-2.col-sm-3.col-xs-3
              %a(href='#{ user_goal_path(current_user, goal) }')
                .legend= get_goal_legend(goal)
                .title= (h goal.title).titlecase
                .freq= goal.to_frequency

            .occurs.col-md-7
              - last, today, next_occur = Commit.get_occurrence_of(goal)
              
              - unless today.blank?
                - pos = goal.commits.where("starts_at < ?", today.first.starts_at).size + (goal.is_a?(WeektimeGoal) ? today.to_ary.count {|c| c.succeed?} : 1)
              - else
                - pos = goal.commits.where("starts_at < ?", Time.now).size + 1
              
              .occur.today-occur
                - if today.blank?
                  No action today.
                - else
                  = send(goal.describe_today_occur, goal, today)
              
                .info
                  .last-occur
                    - if last.blank?
                      This is a new goal
                      - if today.blank?
                        %span.dot •
                      
                    - else
                      = send(goal.describe_last_occur, goal, last)
                      %span.dot •
              
                  .next-occur
                    - unless today.blank?
                      - # Get the today's commit's count of all the goals commits
                      %span.today<
                        %strong>= pos
                        \/
                        = goal.occurrence

                      - unless next_occur.blank?
                        %span.dot •
                
                    - if next_occur.blank?
                      Congrats! This is the last commitment.
                    - else
                      = send(goal.describe_next_occur, goal, next_occur)
                      
                      - if today.blank?
                        %span.today<
                          %strong>= pos
                          \/
                          = goal.occurrence
                        
                      = fa_icon('fa-chevron-right')

            .check.col-md-2
              - unless today.blank? || today.to_ary.select {|c| c.active?}.blank?
                .yes Yes
                
                %span.fa-stack(data-hash-tag='##{ goal.hash_tag }')
                  %i.fa.fa-check.fa-stack-1x
                  %i.fa.fa-circle-o.fa-stack-2x


      
      .row.checkin
        = form_tag check_in_commits_path, method: :post, role: "form", remote: true, :multipart => true do
          .wrapper
            .title.col-md-2.col-sm-3.col-xs-3
              %h4
                %i.fa(class='fa-#{ current_user.checkin_with }')
                Check In
            .fields.col-md-7
              .form-group= text_area_tag :content, '', rows: 3, class: 'form-control'
            .submit.col-md-2
              = submit_tag 'Submit', class: 'btn-glow primary', data: { disable_with: 'Please wait...' }
            
